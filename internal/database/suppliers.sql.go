// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: suppliers.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createSupplier = `-- name: CreateSupplier :one
INSERT INTO suppliers(
    id, name, email, description, phone, country, created_at, updated_at
) VALUES($1, $2, $3, $4, $5, $6, $7, $8)
RETURNING id, name, email, description, phone, country, created_at, updated_at
`

type CreateSupplierParams struct {
	ID          uuid.UUID
	Name        string
	Email       sql.NullString
	Description sql.NullString
	Phone       sql.NullString
	Country     sql.NullString
	CreatedAt   time.Time
	UpdatedAt   time.Time
}

func (q *Queries) CreateSupplier(ctx context.Context, arg CreateSupplierParams) (Supplier, error) {
	row := q.db.QueryRowContext(ctx, createSupplier,
		arg.ID,
		arg.Name,
		arg.Email,
		arg.Description,
		arg.Phone,
		arg.Country,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i Supplier
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Email,
		&i.Description,
		&i.Phone,
		&i.Country,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
