// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users(id, username, email, name, password, role, profile_picture_url, created_at, updated_at)
VALUES($1, $2, $3, $4, $5, $6, $7, $8, $9)
RETURNING id, username, email, name, role, profile_picture_url, created_at, updated_at
`

type CreateUserParams struct {
	ID                uuid.UUID
	Username          string
	Email             string
	Name              string
	Password          string
	Role              string
	ProfilePictureUrl sql.NullString
	CreatedAt         time.Time
	UpdatedAt         time.Time
}

type CreateUserRow struct {
	ID                uuid.UUID
	Username          string
	Email             string
	Name              string
	Role              string
	ProfilePictureUrl sql.NullString
	CreatedAt         time.Time
	UpdatedAt         time.Time
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.Username,
		arg.Email,
		arg.Name,
		arg.Password,
		arg.Role,
		arg.ProfilePictureUrl,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	var i CreateUserRow
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.Name,
		&i.Role,
		&i.ProfilePictureUrl,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
